@use './constants.scss';
@use './layout.scss';
@use './colors.scss';
@use './typography.scss';
@use './functions.scss';

@mixin overlay-pseudo-element {
  content: '';
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

@mixin hover-cta {
  cursor: pointer;
  opacity: 0.5;
  transition: opacity constants.$transition;
  &:hover {
    opacity: 0.9;
  }
  &:active {
    opacity: 1;
  }
}

@mixin ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin link-text() {
  text-decoration: underline;
  color: colors.$secondaryColor;
  cursor: pointer;
  transition: color constants.$transition;

  &:hover {
    color: colors.$secondaryColorLight;
  }
}

@mixin disable-text-selection() {
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */
}

@mixin shadow($amount: 1em, $color: colors.$shadow) {
  box-shadow: 0 0 $amount 0 $color;
}

@mixin fixed-overlay() {
  @include layout.flex-row();
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 100;
}

@mixin square-icon($width: 42px) {
  display: inline-block;
  flex-shrink: 0;
  height: $width;
  width: $width;
  text-align: center;
  line-height: $width;
  border-radius: layout.$borderRadiusSmall;
  border: 1px solid colors.$lightGrey;
  background-color: colors.$white;
}

@mixin input-box() {
  color: colors.$copyColor;
  line-height: 1.5em;
  width: 100%;
  border-radius: layout.$borderRadiusMedium;
  border: 1px solid colors.$lightGrey;
  padding: layout.$spaceSmall;
  background-color: colors.$white;

  &::placeholder {
    color: colors.$grey;
  }
}

@mixin generate-ripple-effect($name, $size: 1em, $borderSizeOverride: none) {
  $borderSizeOverride: if($borderSizeOverride == none, $size, $borderSizeOverride);
  @keyframes #{$name} {
    0% {
      width: 100%;
      height: 100%;
      left: -$borderSizeOverride;
      top: -$borderSizeOverride;
      margin: $borderSizeOverride;
      border-width: 0;
    }

    10% {
      width: 100%;
      height: 100%;
      left: -$borderSizeOverride;
      top: -$borderSizeOverride;
      border-width: $borderSizeOverride;
      margin: 0;
      opacity: 1;
    }

    50% {
      opacity: 0;
      width: calc(100% + 4 * $size);
      height: calc(100% + 4 * $size);;
      left: -2 * $size;
      top: -2 * $size;
      border-width: 0;
    }
    100% {
      opacity: 0;
    }
  }
}

@mixin ripple($color: colors.$primaryColor, $size: 0.5em) {
  position: relative;
  $rippleOneName: ripple-one-#{functions.str-replace('' + $size, '.', '-')};
  $rippleTwoName: ripple-two-#{functions.str-replace('' + $size, '.', '-')};
  @include generate-ripple-effect($rippleOneName, $size);
  @include generate-ripple-effect($rippleTwoName, 2 * $size, 4px);

  &:before, &:after {
    @include overlay-pseudo-element();
    border-color: $color;
    border-style: solid;
  }

  $animationDuration: 1.5s;

  &:before {
    animation: $rippleOneName $animationDuration infinite;
  }

  &:after {
    animation: $rippleTwoName $animationDuration infinite;
  }
}

@mixin pulse-border($color: colors.$primaryColor, $size: 0.5em) {
  $animationName: pulse-#{functions.str-replace('' + $size, '.', '-')};
  @keyframes #{$animationName} {
    0% {
      left: -$size;
      top: -$size;
      width: calc(100% + 2 * $size);
      height: calc(100% + 2 * $size);
      border-radius: inherit;
    }

    100% {
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-width: 0;
      border-radius: 0;
    }
  }

  $animationDuration: 0.7s;
  position: relative;

  & > div {
    position: relative;
    z-index: 2;
    height: 100%;
    width: 100%;
    border-radius: inherit;
    background-color: inherit;
  }

  &:before {
    @include overlay-pseudo-element();
    background-color: $color;
    animation: $animationName $animationDuration infinite alternate-reverse ease-in-out;
    z-index: -1;
  }
}

@mixin neon($color: colors.$primaryColor, $glowColor: colors.$primaryColorLight) {
  background-color: $color;
  border: 0.1em solid $glowColor;
  border-radius: layout.$borderRadiusSmall;
  z-index: 2;
  margin-left: layout.$spaceExtraSmall;
  margin-right: layout.$spaceExtraSmall;

  &.left-end, &.middle {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
    border-right: none;
  }

  &.right-end, &.middle {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    border-left: none;
  }

  &.left-end {
    margin-right: 0;
  }
  &.right-end {
    margin-left: 0;
  }

  &.middle {
    margin-left: 0;
    margin-right: 0;
  }
}
